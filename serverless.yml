service: pokedex-v3-api
plugins:
  - serverless-esbuild # used for compiling/packaging the Typescript code
  - serverless-offline # used for local execution
  - serverless-dynamodb # used for running local dynamodb
  - serverless-offline-scheduler # used for running the cron job locally
useDotenv: true
provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment: # repository wide Lambda env variables
    STAGE: ${opt:stage, 'dev'}
    TABLE_NAME: ${self:custom.tableName}
  memorySize: 1024
  timeout: 10
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:*"
          Resource: "arn:aws:dynamodb:us-east-1:245444063873:table/${self:custom.tableName}"
custom:
  tableName: pokedex-v3-table-${self:provider.stage}
  serverless-dynamodb:
    stages:
      - dev
    start:
      migrate: true
      port: 8000
      docker: false
    migration:
      dir: offline/migrations
functions:
  pokemon:
    handler: ./index.handler
    events:
      - httpApi:
          path: /cards
          method: GET
      - httpApi:
          path: /cards/{name}
          method: POST
  cardCron:
    timeout: 600
    handler: ./src/cron/cardCron.handler
    events:
      - schedule:
          rate: cron(0 0 * * ? *)
          enabled: true
resources:
  Resources:
    PokedexV3Table:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
